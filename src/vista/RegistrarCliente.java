
import java.awt.Graphics;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



public class RegistrarCliente extends javax.swing.JFrame {

    private ImageIcon background;
    
    public RegistrarCliente() {
        background = new ImageIcon(getClass().getResource("/iconos/background_cliente.png")); 

        setContentPane(new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(background.getImage(), 0, 0, getWidth(), getHeight(), this);
            }
        });
        initComponents();
        this.getContentPane().setBackground(java.awt.Color.WHITE);
        setIconImage(new ImageIcon(getClass().getResource("/iconos/icon_1.png")).getImage());
        setResizable(false);  // hace que no se pueda agrandar o achicar
        this.setLocationRelativeTo(null); // centrado
        personalizarComponentes(); 
        configurarBotones(); 
        llenarFecha();
    }

         
private void personalizarComponentes() {
    VolverAlMenu.setBackground(new java.awt.Color(255, 255, 255)); // Fondo blanco
    VolverAlMenu.setBorderPainted(false); // Sin borde
    VolverAlMenu.setContentAreaFilled(false); // Sin relleno
    VolverAlMenu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR)); // Cursor tipo mano

}

    private void configurarBotones() {
    VolverAlMenu.addActionListener((java.awt.event.ActionEvent evt) -> {
        new Loggin().setVisible(true); // Abre la ventana principal
        dispose(); 
    });
  }   

private void llenarFecha(){
    Dia.removeAllItems();
    Mes.removeAllItems();
    Year.removeAllItems();
    
    // DIAS
    for (int i=1; i <=31; i++){
        Dia.addItem(String.valueOf(i));
    }
    
    //MESES
    String[] meses = { "Enero" , "Febrero" , "Marzo", "Abril", "Mayo","Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" };
         for (String mes : meses){
                 Mes.addItem(mes);
        }
         
    // AÑOS
    int yearactual = java.time.Year.now().getValue();
    for (int i= yearactual; i   > 1900;i--){
          Year.addItem(String.valueOf(i));
    }
          
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Mes = new javax.swing.JComboBox<>();
        Year = new javax.swing.JComboBox<>();
        VolverAlMenu = new javax.swing.JButton();
        RegistrarNuevoCliente = new javax.swing.JButton();
        nombre1 = new javax.swing.JLabel();
        usuarioCliente = new javax.swing.JTextField();
        Usuario = new javax.swing.JLabel();
        nombreCliente = new javax.swing.JTextField();
        Correo = new javax.swing.JLabel();
        CorreoCliente = new javax.swing.JTextField();
        FechaDeNacimiento = new javax.swing.JLabel();
        PasswordCliente = new javax.swing.JTextField();
        Password = new javax.swing.JLabel();
        Dia = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Mes.setBackground(new java.awt.Color(0, 0, 0));
        Mes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Mes.setForeground(new java.awt.Color(255, 255, 255));
        Mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MesActionPerformed(evt);
            }
        });

        Year.setBackground(new java.awt.Color(0, 0, 0));
        Year.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Year.setForeground(new java.awt.Color(255, 255, 255));
        Year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearActionPerformed(evt);
            }
        });

        VolverAlMenu.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        VolverAlMenu.setText("Volver");

        RegistrarNuevoCliente.setBackground(new java.awt.Color(0, 0, 0));
        RegistrarNuevoCliente.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        RegistrarNuevoCliente.setForeground(new java.awt.Color(255, 255, 255));
        RegistrarNuevoCliente.setText("Registrarme");
        RegistrarNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarNuevoClienteActionPerformed(evt);
            }
        });

        nombre1.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        nombre1.setText("Nombre");

        usuarioCliente.setBackground(new java.awt.Color(0, 0, 0));
        usuarioCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        usuarioCliente.setForeground(new java.awt.Color(255, 255, 255));

        Usuario.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        Usuario.setText("Usuario");

        nombreCliente.setBackground(new java.awt.Color(0, 0, 0));
        nombreCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        nombreCliente.setForeground(new java.awt.Color(255, 255, 255));

        Correo.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        Correo.setText("Correo");

        CorreoCliente.setBackground(new java.awt.Color(0, 0, 0));
        CorreoCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        CorreoCliente.setForeground(new java.awt.Color(255, 255, 255));

        FechaDeNacimiento.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        FechaDeNacimiento.setText("Fecha de Nacimiento");

        PasswordCliente.setBackground(new java.awt.Color(0, 0, 0));
        PasswordCliente.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        PasswordCliente.setForeground(new java.awt.Color(255, 255, 255));

        Password.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        Password.setText("Contraseña");

        Dia.setBackground(new java.awt.Color(0, 0, 0));
        Dia.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Dia.setForeground(new java.awt.Color(255, 255, 255));
        Dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Dia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(334, 334, 334)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PasswordCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Usuario)
                    .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Password)
                    .addComponent(CorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Correo)
                    .addComponent(FechaDeNacimiento)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(nombre1)
                    .addComponent(usuarioCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(VolverAlMenu))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(RegistrarNuevoCliente)))
                .addContainerGap(336, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(113, Short.MAX_VALUE)
                .addComponent(nombre1)
                .addGap(4, 4, 4)
                .addComponent(nombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Usuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usuarioCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Correo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CorreoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Password)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FechaDeNacimiento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Year, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(RegistrarNuevoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VolverAlMenu)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DiaActionPerformed

    private void MesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MesActionPerformed

    private void YearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_YearActionPerformed

    private void RegistrarNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarNuevoClienteActionPerformed
    String nombre = nombreCliente.getText();
    String correo = CorreoCliente.getText();
    String password = PasswordCliente.getText();
    String dia = (String) Dia.getSelectedItem();
    String mes = (String) Mes.getSelectedItem();
    String year = (String) Year.getSelectedItem();
    String fechaNacimiento = dia + " de " + mes + " de " + year;
    
    if (nombre.isEmpty() || correo.isEmpty() || password.isEmpty() ||
         dia.equals("Día") || mes.equals("Mes") || year.equals("Año")) {
         JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.");
         return;
    }
    
    int yearNacimiento = Integer.parseInt((String) Year.getSelectedItem());
    int yearActual = java.util.Calendar.getInstance().get(java.util.Calendar.YEAR);

    if (yearActual - yearNacimiento < 18) {
            JOptionPane.showMessageDialog(this, "El cliente debe ser mayor de 18 años.");
     return;
    }

    if (!correo.matches("^[\\w.-]+@[\\w.-]+\\.\\w{2,}$")) {
          JOptionPane.showMessageDialog(this, "Correo electrónico inválido.");
        return;
        }
        
    if (!password.matches("^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$")) {
        JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 6 caracteres, incluyendo letras y números.");
        return;
        }

        // Crear el archivo de texto donde guardaremos los datos por ahora
        String fileName = "clientes.txt"; 

    try {
        FileWriter writer = new FileWriter(fileName, true); 
        try (BufferedWriter bufferedWriter = new BufferedWriter(writer)) {
            bufferedWriter.write("Nombre: " + nombre);
            bufferedWriter.newLine();
            bufferedWriter.write("Correo: " + correo);
            bufferedWriter.newLine();
            bufferedWriter.write("Contraseña: " + password);
            bufferedWriter.newLine();
            bufferedWriter.write("Fecha de Nacimiento: " + fechaNacimiento);
            bufferedWriter.newLine();
            bufferedWriter.write("-------------------------------------------------");
            bufferedWriter.newLine();
        }

        JOptionPane.showMessageDialog(this, "Cliente registrado exitosamente.");
        nombreCliente.setText("");
        CorreoCliente.setText("");
        PasswordCliente.setText("");
        Dia.setSelectedIndex(0);
        Mes.setSelectedIndex(0);
        Year.setSelectedIndex(0);
        
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al registrar el empleado: " + e.getMessage());
        }
    }//GEN-LAST:event_RegistrarNuevoClienteActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new RegistrarCliente().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Correo;
    private javax.swing.JTextField CorreoCliente;
    private javax.swing.JComboBox<String> Dia;
    private javax.swing.JLabel FechaDeNacimiento;
    private javax.swing.JComboBox<String> Mes;
    private javax.swing.JLabel Password;
    private javax.swing.JTextField PasswordCliente;
    private javax.swing.JButton RegistrarNuevoCliente;
    private javax.swing.JLabel Usuario;
    private javax.swing.JButton VolverAlMenu;
    private javax.swing.JComboBox<String> Year;
    private javax.swing.JLabel nombre1;
    private javax.swing.JTextField nombreCliente;
    private javax.swing.JTextField usuarioCliente;
    // End of variables declaration//GEN-END:variables
}
